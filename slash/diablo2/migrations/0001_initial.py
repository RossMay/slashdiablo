# -*- coding: utf-8 -*-
# Generated by Django 1.9.1 on 2016-01-27 15:38
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Diablo 2 Account Name', max_length=25)),
                ('user_id', models.IntegerField(default=-1, help_text='Diablo 2 Account User ID')),
                ('admin', models.BooleanField(default=False, help_text='Account is admin flagged')),
                ('operator', models.BooleanField(default=False, help_text='Account is operator flagged')),
                ('locked', models.BooleanField(default=False, help_text='Account is locked')),
                ('commandgroups', models.IntegerField(default=1, help_text='Diablo 2 command groups (1 is Default)')),
                ('lastlogin', models.DateTimeField(blank=True, help_text='Last time logged in by this account in game', null=True)),
                ('lastlogin_ip', models.CharField(blank=True, help_text='Last ip logged in from by this account in game', max_length=15, null=True)),
                ('status', models.CharField(choices=[('A', 'Active'), ('B', 'Banned')], default='A', help_text='Account status (Active/Banned)', max_length=1)),
                ('email', models.EmailField(blank=True, help_text='Diablo 2 registered email address', max_length=254, null=True)),
                ('last_update', models.DateTimeField(blank=True, help_text='Last time the account was updated from the database', null=True)),
                ('last_character_update', models.DateTimeField(blank=True, help_text='Last time character data was updated', null=True)),
                ('owner', models.ForeignKey(blank=True, help_text='Owner of this account, blank if unknown', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account',
                'permissions': (('diablo2.account.sync', 'Can resync Diablo 2 accounts'), ('diablo2.account.sync.all', 'Can resync all Diablo 2 accounts at once'), ('diablo2.character.sync', 'Can resync Diablo 2 characters'), ('diablo2.character.sync.all', 'Can resync all Diablo 2 characters at once')),
            },
        ),
        migrations.CreateModel(
            name='Character',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Character Name', max_length=25)),
                ('level', models.IntegerField(default=1, help_text='Character Level')),
                ('cclass', models.CharField(choices=[('SO', 'Sorceress'), ('PA', 'Paladin'), ('AM', 'Amazon'), ('NE', 'Necromancer'), ('BA', 'Barbarian'), ('AS', 'Assassin'), ('DR', 'Druid'), ('UN', 'Unknown')], default='UN', help_text='Character Class', max_length=2)),
                ('hardcore', models.BooleanField(default=False, help_text='Character is hardcore')),
                ('has_died', models.BooleanField(default=False, help_text='Character has died')),
                ('created', models.DateTimeField(help_text='Date created (Determines ladder)')),
                ('last_update', models.DateTimeField(blank=True, help_text='Last time the character was updated', null=True)),
                ('info', models.TextField(blank=True)),
                ('account', models.ForeignKey(help_text='Diablo2 Account', on_delete=django.db.models.deletion.CASCADE, to='diablo2.Account')),
            ],
            options={
                'verbose_name': 'Character',
            },
        ),
    ]
